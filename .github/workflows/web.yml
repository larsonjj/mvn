name: Web Build

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v12

      - name: Configure CMake
        run: |
          emcmake cmake -B ${{github.workspace}}/build-web \
            -DCMAKE_BUILD_TYPE=Release \
            -DMVN_BUILD_EXAMPLES=ON \
            -DMVN_BUILD_TESTS=OFF \
            -DEMSCRIPTEN_SHELL_TEMPLATE="${{github.workspace}}/cmake/templates/minshell.html"

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build-web --config Release --target mvn_example_empty

      - name: Prepare Web Files
        run: |
          mkdir -p dist
          # Copy all generated files (the HTML file already uses minshell.html template)
          cp ${{github.workspace}}/build-web/examples/mvn_example_empty.* dist/
          cp ${{github.workspace}}/build-web/examples/mvn_example_empty.wasm dist/ || echo "No .wasm file found"
          cp ${{github.workspace}}/build-web/examples/mvn_example_empty.data dist/ || echo "No .data file found"

          # If there are any additional assets not preloaded, copy them
          if [ -d "${{github.workspace}}/assets" ]; then
            mkdir -p dist/assets
            cp -r ${{github.workspace}}/assets/* dist/assets/
          fi

          # Create an index.html that redirects to the actual example
          cat > dist/index.html << EOL
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <meta http-equiv="refresh" content="0;url=mvn_example_empty.html">
            <title>MVN Game Framework</title>
          </head>
          <body>
            <p>Redirecting to <a href="mvn_example_empty.html">MVN Example</a>...</p>
          </body>
          </html>
          EOL

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  build-for-web:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
